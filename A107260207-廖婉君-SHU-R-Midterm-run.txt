# 2020/12/11(五), 109學年第一學期 資料科學應用 R期中考

學號:        姓名: 

# (請依照規定)貼上執行程式碼及執行結果。
詳見: R程式作業繳交方式
http://www.hmwu.idv.tw/web/teaching/doc/R-how-homework.pdf


> # ex1
> study <- function(d){
+   # 補習英文 X 小時
+   # 補習電腦 Y 小時
+    U = (X^1/2, Y^1/2)
+ if Tuition <= 12000, Fit(*)
}
> # ex2(a)
> scoreA <- read_excel("exam/Score-109.xlsx", skip=1)
> head(scoreA, 5)
# A tibble: 5 x 3
  ID    Calculus English
  <chr> <chr>    <chr>  
1 No.1  72       62     
2 No.2  88       97     
3 No.3  76       66     
4 No.4  89       51     
5 No.5  46       15     
> tail(scoreA, 5)
# A tibble: 5 x 3
  ID    Calculus English
  <chr> <chr>    <chr>  
1 No.71 69       96     
2 No.72 51       100    
3 No.73 37       50     
4 No.74 33       92     
5 No.75 4        37     
> str(scoreA)
tibble [75 x 3] (S3: tbl_df/tbl/data.frame)
 $ ID      : chr [1:75] "No.1" "No.2" "No.3" "No.4" ...
 $ Calculus: chr [1:75] "72" "88" "76" "89" ...
 $ English : chr [1:75] "62" "97" "66" "51" ...
> # ex2(b)
> set.seed(12345) 
> scoreA <- c(NA, 0:100) 
> English <- sample(scoreA, 50, replace=T) 
> Calculus <- sample(scoreA, 50, replace=T)
> # ex2(c)
> my.cor <- function(x){
+  # x <- English
+  # y <- Calculus
+   cor
+ }
> # ex2(d)
> my.cor <- function(X){
+   # x <- English
+   # y <- Calculus
+   cor
+ }
> cor
function (x, y = NULL, use = "everything", method = c("pearson", 
    "kendall", "spearman")) 
{
    na.method <- pmatch(use, c("all.obs", "complete.obs", 
        "pairwise.complete.obs", "everything", "na.or.complete"))
    if (is.na(na.method)) 
        stop("invalid 'use' argument")
    method <- match.arg(method)
    if (is.data.frame(y)) 
        y <- as.matrix(y)
    if (is.data.frame(x)) 
        x <- as.matrix(x)
    if (!is.matrix(x) && is.null(y)) 
        stop("supply both 'x' and 'y' or a matrix-like 'x'")
    if (!(is.numeric(x) || is.logical(x))) 
        stop("'x' must be numeric")
    stopifnot(is.atomic(x))
    if (!is.null(y)) {
        if (!(is.numeric(y) || is.logical(y))) 
            stop("'y' must be numeric")
        stopifnot(is.atomic(y))
    }
    Rank <- function(u) {
        if (length(u) == 0L) 
            u
        else if (is.matrix(u)) {
            if (nrow(u) > 1L) 
                apply(u, 2L, rank, na.last = "keep")
            else row(u)
        }
        else rank(u, na.last = "keep")
    }
    if (method == "pearson") 
        .Call(C_cor, x, y, na.method, FALSE)
    else if (na.method %in% c(2L, 5L)) {
        if (is.null(y)) {
            .Call(C_cor, Rank(na.omit(x)), NULL, na.method, method == 
                "kendall")
        }
        else {
            nas <- attr(na.omit(cbind(x, y)), "na.action")
            dropNA <- function(x, nas) {
                if (length(nas)) {
                  if (is.matrix(x)) 
                    x[-nas, , drop = FALSE]
                  else x[-nas]
                }
                else x
            }
            .Call(C_cor, Rank(dropNA(x, nas)), Rank(dropNA(y, 
                nas)), na.method, method == "kendall")
        }
    }
    else if (na.method != 3L) {
        x <- Rank(x)
        if (!is.null(y)) 
            y <- Rank(y)
        .Call(C_cor, x, y, na.method, method == "kendall")
    }
    else {
        if (is.null(y)) {
            ncy <- ncx <- ncol(x)
            if (ncx == 0) 
                stop("'x' is empty")
            r <- matrix(0, nrow = ncx, ncol = ncy)
            for (i in seq_len(ncx)) {
                for (j in seq_len(i)) {
                  x2 <- x[, i]
                  y2 <- x[, j]
                  ok <- complete.cases(x2, y2)
                  x2 <- rank(x2[ok])
                  y2 <- rank(y2[ok])
                  r[i, j] <- if (any(ok)) 
                    .Call(C_cor, x2, y2, 1L, method == "kendall")
                  else NA
                }
            }
            r <- r + t(r) - diag(diag(r))
            rownames(r) <- colnames(x)
            colnames(r) <- colnames(x)
            r
        }
        else {
            if (length(x) == 0L || length(y) == 0L) 
                stop("both 'x' and 'y' must be non-empty")
            matrix_result <- is.matrix(x) || is.matrix(y)
            if (!is.matrix(x)) 
                x <- matrix(x, ncol = 1L)
            if (!is.matrix(y)) 
                y <- matrix(y, ncol = 1L)
            ncx <- ncol(x)
            ncy <- ncol(y)
            r <- matrix(0, nrow = ncx, ncol = ncy)
            for (i in seq_len(ncx)) {
                for (j in seq_len(ncy)) {
                  x2 <- x[, i]
                  y2 <- y[, j]
                  ok <- complete.cases(x2, y2)
                  x2 <- rank(x2[ok])
                  y2 <- rank(y2[ok])
                  r[i, j] <- if (any(ok)) 
                    .Call(C_cor, x2, y2, 1L, method == "kendall")
                  else NA
                }
            }
            rownames(r) <- colnames(x)
            colnames(r) <- colnames(y)
            if (matrix_result) 
                r
            else drop(r)
        }
    }
}
<bytecode: 0x0000022f0f9d5428>
<environment: namespace:stats>
> # ex3(a)
> my.dnorm <-function(X){
+   # x <- 一個數值
+   mean = 0, sd=1,log = FALSE
錯誤: 未預期的 ',' in:
"  # x <- 一個數值
  mean = 0,"
>   cat(C_dnorm, x, mean, sd, log = FALSE)

> # ex3(b)
> str(dnorm)
function (x, mean = 0, sd = 1, log = FALSE)  
> dnorm
function (x, mean = 0, sd = 1, log = FALSE) 
.Call(C_dnorm, x, mean, sd, log)
<bytecode: 0x0000022f0f72dc78>
<environment: namespace:stats>
> 

